# service register and discovery
spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
spring.cloud.nacos.discovery.namespace=xxxx
spring.cloud.nacos.discovery.group=local

# config server
spring.cloud.nacos.config.server-addr=127.0.0.1:8848
spring.cloud.nacos.config.namespace=xxxx
spring.cloud.nacos.config.group=local

# sentinel dashboard
spring.cloud.sentinel.transport.dashboard=127.0.0.1:8888
# sentinel 与 console 交互的httpserver端口
spring.cloud.sentinel.transport.port=8791
spring.cloud.sentinel.log.dir=logs/sentinel
spring.cloud.sentinel.log.switch-pid=true

# sentinel datasource nacos, more rule see https://sentinelguard.io/zh-cn/docs/basic-api-resource-rule.html
spring.cloud.sentinel.datasource.system.nacos.server-addr=127.0.0.1:8848
spring.cloud.sentinel.datasource.system.nacos.username=nacos
spring.cloud.sentinel.datasource.system.nacos.password=nacos
spring.cloud.sentinel.datasource.system.nacos.namespace=xxxx
spring.cloud.sentinel.datasource.system.nacos.data-id=xxxx-global-rule-sentinel
spring.cloud.sentinel.datasource.system.nacos.group-id=default
spring.cloud.sentinel.datasource.system.nacos.rule-type=system

# gateway 限流 https://github.com/alibaba/Sentinel/wiki/%E7%BD%91%E5%85%B3%E9%99%90%E6%B5%81
spring.cloud.sentinel.datasource.gw-flow.nacos.server-addr=127.0.0.1:8848
spring.cloud.sentinel.datasource.gw-flow.nacos.username=nacos
spring.cloud.sentinel.datasource.gw-flow.nacos.password=nacos
spring.cloud.sentinel.datasource.gw-flow.nacos.namespace=xxxx
spring.cloud.sentinel.datasource.gw-flow.nacos.data-id=xxxx-gateway-rule-sentinel
spring.cloud.sentinel.datasource.gw-flow.nacos.group-id=default
spring.cloud.sentinel.datasource.gw-flow.nacos.rule-type=gw-flow

# 跨域
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowedMethods=*

# redis
spring.redis.client-type=lettuce
spring.redis.host=127.0.0.1
spring.redis.port=6379
# Redis数据库索引（默认为0）
spring.redis.database=2
# Redis服务器连接密码（默认为空）
spring.redis.password=123456
spring.redis.timeout=1s
# 连接超时时间
spring.redis.connect-timeout=3s
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.lettuce.pool.max-active=3000
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.lettuce.pool.max-wait=5s
# 连接池中的最大空闲连接
spring.redis.lettuce.pool.max-idle=1000
# 连接池中的最小空闲连接
spring.redis.lettuce.pool.min-idle=200

# 请求验证成功后签名密钥
xxxx.access.sign-key=xxxx
# jwt密码
xxxx.oauth2.jwt.signingKey=123456
# 数据加密密码
xxxx.mysql.secretKey=123456